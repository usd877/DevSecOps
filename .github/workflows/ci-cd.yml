name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      run: |
        pytest

    - name: Deploy to VPS
      run: |
        ssh root@94.228.112.241 "cd /root/DevSecOps && git pull && docker-compose up -d"
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Run static analysis (Bandit)
      id: bandit
      run: |
        pip install bandit
        bandit -r . --format json -o bandit-report.json

    - name: Run dynamic analysis (OWASP ZAP)
      run: |
        docker run -t owasp/zap2docker-stable zap-full-scan.py -t http://94.228.112.241/ -r zap-report.html

    - name: Run secret scanning (TruffleHog)
      run: |
        pip install truffleHog
        trufflehog --json . > trufflehog-results.json

    - name: Run Hadolint for Dockerfile
      run: |
        curl -s https://raw.githubusercontent.com/hadolint/hadolint/master/hadolint-linux-amd64 -o /usr/local/bin/hadolint
        chmod +x /usr/local/bin/hadolint
        hadolint Dockerfile

    - name: Add comment with Bandit report to PR
      uses: peter-evans/create-or-update-comment@v2
      with:
        issue-number: ${{ github.event.pull_request.number }}
        body: |
          **Bandit Analysis Results:**
          ```json
          ${{ steps.bandit.outputs.report }}
          ```

    - name: Stop release if critical vulnerabilities found
      if: failure()
      run: |
        echo "Critical vulnerabilities found, stopping release!"
        exit 1
